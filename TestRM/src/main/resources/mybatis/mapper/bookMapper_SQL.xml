<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.BookMapper">

	<select id="selectBookList" resultType="bookVO">
		SELECT
		    book_cd,
		    book_nm,
		    author,
		    rent_av,
		    book_type,
		    book_des,
		    releasedate,
		    book_publisher
		FROM
		    book
		order by book_cd desc
            
	</select>
	
	<select id="selectBook" parameterType="String" resultType="bookVO">
		SELECT
		    book_cd,
		    book_nm,
		    author,
		    rent_av,
		    book_type,
		    book_des,
		    releasedate,
		    book_publisher
		FROM
		    book
		WHERE 
			book_cd = #{bookCd}
	</select>
	
	<insert id="insertBook" parameterType="bookVO">
		INSERT INTO book (
		    book_cd,
		    book_nm,
		    author,
		    rent_av,
		    book_type,
		    BOOK_DES,
		    RELEASEDATE,
		    BOOK_PUBLISHER
		) VALUES (
		   #{bookCd}||bookCd_seq.nextval,#{bookNm},#{author},#{rentAv},#{bookType},#{bookDes},#{releaseDate},#{bookPublisher}
		)
	</insert>
	
	<update id="updateBook" parameterType="bookVO">
		UPDATE BOOK
		SET
			book_nm = #{bookNm},
		    author = #{author},
		    rent_av = #{rentAv},
		    book_type = #{bookType},
		    BOOK_DES = #{bookDes},
		    RELEASEDATE = #{releaseDate},
		    BOOK_PUBLISHER = #{bookPublisher}
		 WHERE 
			 book_cd = #{bookCd}
	</update>
	
	<insert id="insertRent" parameterType="bookRentVO" useGeneratedKeys="true">
		<selectKey order="BEFORE" keyProperty="rentCd" resultType="string" >
			select 'rent'||rent_seq.nextval from dual
		</selectKey>
		INSERT INTO bookrenthistory (
		    rent_cd,
		    book_cd,
		    rs_date,
		    rfs_date,
		    mem_id
		) VALUES (
		    #{rentCd},
		    #{bookCd},
		    sysdate,
		    sysdate+7,
		    #{memId}
		)
	</insert>
	
	<update id="updateBookRent" parameterType="String">
		UPDATE BOOK
		SET
		    rent_av = 'N'
		 WHERE 
			 book_cd = #{bookCd}
	</update>
	
	<select id="selecOnetRentHis" parameterType="String" resultType="bookRentVO">
		SELECT
	        r.rs_date,
	        r.rf_date,
	        r.rfs_date,
	        r.mem_id,
	        b.book_nm
	    FROM
	        bookrenthistory r left outer join book b on(r.book_cd = b.book_cd)
	    WHERE 
	        rent_cd = #{rentCd}
	</select>
	
	<update id="bookReturn" parameterType="String">
		UPDATE BOOK
		SET
		    rent_av = 'Y'
		 WHERE 
			 book_cd = #{bookCd}
	</update>
	
	<update id="updateRentHistory"  parameterType="String">
		UPDATE bookrenthistory
		SET
		    RF_DATE = sysdate
		 WHERE 
			 rent_cd = #{rentCd}
	</update>
	
	<select id="bookRentHistory" parameterType="String" resultType="bookRentVO">
		SELECT
			rent_cd,
		    rs_date,
		    rf_date,
		    rfs_date,
		    mem_id,
		    book_nm
		FROM
		    bookrenthistory r left outer join book b on(r.book_cd = b.book_cd)
		WHERE 
		    r.book_cd = #{bookCd}
	</select>
</mapper>